{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red191\green100\blue38;\red32\green32\blue32;
\red254\green187\blue91;\red153\green168\blue186;\red86\green132\blue173;\red88\green118\blue71;\red0\green0\blue0;
\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;\red86\green132\blue173;\red88\green118\blue71;
}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;
}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\b\fs36 \cf2 Steps for handling keywords
\b0\fs24 \cf0 \
\
1. A function called keyword_in_link is defined.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 \cb4 def \cf5 keyword_in_link\cf6 (keyword\cf3 , \cf6 href\cf3 , \cf6 title):\
    \cf3 if \cf6 href.lower().find(keyword) == \cf7 0 \cf3 or \cf6 title.lower().find(keyword) == \cf7 0 \cf3 or \cf6 \\\
                    href.lower().find(\cf8 "_" \cf6 + keyword) != -\cf7 1 \cf3 or \cf6 title.lower().find(\cf8 "_" \cf6 + keyword) != -\cf7 1 \cf3 or \cf6 \\\
                    href.lower().find(\cf8 "-" \cf6 + keyword) != -\cf7 1 \cf3 or \cf6 title.lower().find(\cf8 "-" \cf6 + keyword) != -\cf7 1 \cf3 or \cf6 \\\
                    href.lower().find(\cf8 " " \cf6 + keyword) != -\cf7 1 \cf3 or \cf6 title.lower().find(\cf8 " " \cf6 + keyword) != -\cf7 1\cf6 :\
        \cf3 return \cf8 "true"\
    \cf3 else\cf6 :\
        \cf3 return \cf8 "false"\
\cb1 \
\cf9 2. The function checks for the different variations of the keyword in the  	href and the text of the link found. It takes the href and 	text of a link as its arguments and returns whether the link should be 	crawled or not ie. If it is a relevant link for that particular 	keyword.\
\
3. The line\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf10 \cb11 if \cf12 href.lower().find(keyword) == \cf13 0 \cf10 or \cf12 title.lower().find(keyword) == \cf13 0\cf9 \cb1 \
Checks if the word rain appears at the first position(0th position) of the href or text ie. Nothing precedes the word rain. \
This gets rid of variations like grain and Ukraine which will return false.\
\
4. The line\
\cf12 \cb11 href.lower().find(\cf14 \cb11 "_" \cf12 \cb11 + keyword) != -\cf13 1 \cf10 or \cf12 title.lower().find(\cf14 \cb11 "_" \cf12 \cb11 + keyword) != -\cf13 1 \cf10 or \cf12 \\\cf9 \cb1 \
Checks if the word rain is preceded by \'93_\'94 in any of the links (Ex. Falling_rain). If so, true is returned.\
\
5. The line\
\cf12 \cb11                     href.lower().find(\cf14 \cb11 " " \cf12 \cb11 + keyword) != -\cf13 1 \cf10 or \cf12 title.lower().find(\cf14 \cb11 " " \cf12 \cb11 + keyword) != -\cf13 1\cf12 :\cf9 \cb1 \
Checks if the word rain is preceded by \'93 \'93(an empty space) in any of the links(Ex. Torrential rain). If, so return true\
\
6. The line\
\cf12 \cb11                     href.lower().find(\cf14 \cb11 "-" \cf12 \cb11 + keyword) != -\cf13 1 \cf10 or \cf12 title.lower().find(\cf14 \cb11 "-" \cf12 \cb11 + keyword) != -\cf13 1 \cf10 or \cf12 \\\cf9 \cb1 \
Checks if the word rain is preceded by \'93-\'93 in any of the links(Ex. October-rain). If, so return true\
\
7. If any of these 4 conditions are satisfied, the link should be considered, as it contains a valid variation of the keyword.}